name: CI

# Controls when the action will run. 
on: [push, workflow_dispatch]

jobs:
  buildCore:
    name: Build Core
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Setup JDK
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 8
          cache: 'gradle'

      # Build Core
      - name: Build/Install Core
        working-directory: ./MinecraftMod/core
        run: './gradlew publishToMavenLocal'

      # Upload Maven Local
      - name: Upload 
        uses: actions/upload-artifact@v3
        with:
          path: ~/.m2/repository
          name: maven

  buildJava8:
    name: Build ${{ matrix.mod-loader }} ${{ matrix.mc-version }}
    runs-on: ubuntu-latest
    needs: buildCore
    
    # Matrix of jobs to run
    strategy:
      fail-fast: false
      matrix:
        mod-loader: ['forge', 'fabric']
        mc-version: ['1.16.4']
        #exclude:
        #  - mod-loader: 'forge'
        #    mc-version: '1.17'
        
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v2

      # Setup JDK
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 8
          cache: 'gradle'

      # Download Core
      - name: Download Core Artifact
        uses: actions/download-artifact@v3
        with:
          name: maven
          path: ~/.m2/repository
          
      # Build Core
      # - name: Build/Install Core
      #   working-directory: ./MinecraftMod/core
      #   run: './gradlew publishToMavenLocal'
          
      # Build Minecraft Mod
      - name: Build Mod
        working-directory: ./MinecraftMod/${{ matrix.mod-loader }}/${{ matrix.mc-version }}
        run: './gradlew build --no-daemon'

      # Upload Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.mod-loader }} ${{ matrix.mc-version }}
          path: ./MinecraftMod/${{ matrix.mod-loader }}/${{ matrix.mc-version }}/build/libs/*.jar

  buildJava17:
    name: Build ${{ matrix.mod-loader }} ${{ matrix.mc-version }}
    runs-on: ubuntu-latest
    needs: buildCore
    
    # Matrix of jobs to run
    strategy:
      fail-fast: false
      matrix:
        mod-loader: ['fabric', 'forge']
        mc-version: ['1.17.1', '1.18.1', '1.18.2', '1.19', '1.19.2', '1.19.3']
        #exclude:
        #  - mod-loader: 'forge'
        #    mc-version: '1.17'
        
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v2

      # # Setup JDK
      # - name: Set up JDK 1.8
      #   uses: actions/setup-java@v2
      #   with:
      #     distribution: 'adopt'
      #     java-version: 8
          
      # # Build Core
      # - name: Build/Install Core
      #   working-directory: ./MinecraftMod/core
      #   run: './gradlew publishToMavenLocal'

      # Setup JDK
      - name: Set up JDK 1.17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17
          cache: 'gradle'

      # Download Core
      - name: Download Core Artifact
        uses: actions/download-artifact@v3
        with:
          name: maven
          path: ~/.m2/repository
          
      # Build Minecraft Mod
      - name: Build Mod
        working-directory: ./MinecraftMod/${{ matrix.mod-loader }}/${{ matrix.mc-version }}
        run: './gradlew build --no-daemon'

      # Upload Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.mod-loader }} ${{ matrix.mc-version }}
          path: ./MinecraftMod/${{ matrix.mod-loader }}/${{ matrix.mc-version }}/build/libs/*.jar

  buildPlugin:
    name: Build Stream Deck Plugin
    runs-on: windows-latest
    needs: buildCore

    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v2

      # # Setup JDK
      # - name: Set up JDK 1.8
      #   uses: actions/setup-java@v2
      #   with:
      #     distribution: 'adopt'
      #     java-version: 8
          
      # # Build Core
      # - name: Build/Install Core
      #   working-directory: ./MinecraftMod/core
      #   run: './gradlew.bat publishToMavenLocal'

      # Setup JDK
      - name: Set up JDK 16
        uses: actions/setup-java@v3
        with:
          distribution: microsoft
          java-version: 16
          cache: 'gradle'

      # Download Core
      - name: Download Core Artifact
        uses: actions/download-artifact@v3
        with:
          name: maven
          path: ~/.m2/repository

      # Generate Stream Deck Plugin
      - name: Generate Stream Deck Plugin
        working-directory: ./StreamDeckPlugin
        run: './gradlew.bat run --no-daemon'

      # Download DistributionTool from Elgato
      - name: Download DistributionTool
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: 'https://developer.elgato.com/documentation/stream-deck/distributiontool/DistributionToolWindows.zip'
        
      # Unzip DistributionTool
      - name: Unzip DistributionTool
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: './DistributionToolWindows.zip'
          pathTarget: './StreamDeckPlugin'
          
      # Run DistributionTool
      - name: Run DistributionTool
        working-directory: './StreamDeckPlugin'
        run: './DistributionTool.exe -b -i com.mosadie.effectmc.sdPlugin -o .'
        
      # Upload Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Stream Deck Plugin
          path: ./StreamDeckPlugin/*.streamDeckPlugin
